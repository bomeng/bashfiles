@import "../imports/fonts";
@import "../imports/colors";

@mixin tooltip($position: "bottom") {
  position: relative; // pseudo-elements should be relative to this
  cursor: help; // got a question about this? so does your cursor
  display: inline-block;

  &:before,
  &:after {
    font-size: .75em;
    opacity: 0;
    visibility: hidden;
    position: absolute; // finds the nearest positioned parent
    pointer-events: auto; // tooltip sticks around when you hover it
    display: block; // enable transforms
    transition: all 250ms ease-in; // animate the drop in
    transform: translate3d(0, -.25em, 0); // raise it up a bit
  }

  &:hover {
    &:before,
    &:after {
      opacity: 1;
      visibility: visible;
      transform: translate3d(0, 0, 0); // drop it like it's
    }
  }

  &:after {
    content: attr(alt); // grab content from `alt` tag
    color: white;
    white-space: nowrap; // don't let it wrap
    background: $grey-darkest; // fallback for anti-opacity browsers
    background: $shadiest;
    padding: .125em .5em;
    border-radius: 4px;
    z-index: 19; // get on top of other page elements
  }

  &:before {
    content: ""; // just a triangle, no content
    border-style: solid;
    border-color: $grey-darkest transparent; // fallback for anti-opacity browsers
    border-color: $shadiest transparent; // make side borders transparent to form a triangle
    z-index: 20; // make sure the triangle shows over the tip
  }

  @if $position == "bottom" {
    &:before,
    &:after {
      transform: translate3d(0, -.25em, 0); // raise it up a bit
    }
    &:after {
      top: 100%; // hang it under the element
      left: 0;
      margin-top: calc(.25em - .5px);
    }
    &:before {
      top: 100%;
      left: 1em;
      border-width: 0 .25em .25em; // omit the top border to form to an upward-facing point
    }
  }

  @if $position == "top" {
    &:before,
    &:after {
      transform: translate3d(0, .25em, 0); // raise it up a bit
    }
    &:after {
      bottom: 100%; // hang it under the element
      left: 0;
      margin-bottom: calc(.25em - .5px);
    }
    &:before {
      bottom: 100%;
      left: 1em;
      border-width: .25em .25em 0 .25em; // omit the top border to form to an upward-facing point
    }
  }

  @if $position == "right" {
    &:before,
    &:after {
      transform: translate3d(-.25em, 0, 0); // raise it up a bit
    }
    &:after {
      bottom: 25%;
      left: 100%; // hang it next to the element
      margin-left: calc(.25em - .5px);
    }
    &:before {
      bottom: 50%;
      left: 100%;
      border-color: transparent $grey-darkest; // fallback for anti-opacity browsers
      border-color: transparent $shadiest; // make top and bottom borders transparent to form a triangle
      border-width: .25em .25em .25em 0; // put the point on the left
    }
  }

  @if $position == "left" {
    &:before,
    &:after {
      transform: translate3d(.25em, 0, 0); // to the right a bit
    }
    &:after {
      bottom: 25%;
      right: 100%; // hang it next to the element
      margin-right: calc(.25em - .5px);
    }
    &:before {
      bottom: 50%;
      right: 100%;
      border-color: transparent $grey-darkest; // fallback for anti-opacity browsers
      border-color: transparent $shadiest; // make top and bottom borders transparent to form a triangle
      border-width: .25em 0 .25em .25em; // put the point on the right
    }
  }
}
